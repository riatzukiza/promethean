let lastPutArgs = [];
class Client {
  constructor() { this.guilds = { fetch: async () => [] }; }
  login() { return Promise.resolve(); }
  on() { return this; }
}
class Guild { constructor(id) { this.id = id; this.voiceAdapterCreator = () => {}; } }
class User { constructor(id, username) { this.id = id; this.username = username; } }
const Events = { InteractionCreate: 'interactionCreate', Error: 'error' };
const GatewayIntentBits = { Guilds: 1, GuildMessages:2, GuildVoiceStates:4 };
class REST { setToken() { return this; } put(...args) { lastPutArgs.push(args); return Promise.resolve(); } }
const Routes = { applicationGuildCommands: (appId,guildId)=>`/guilds/${guildId}/commands` };
module.exports = { Client, Guild, User, Events, GatewayIntentBits, REST, Routes, lastPutArgs };
