SERVICES_PY=services/py/stt services/py/tts services/py/discord_indexer services/py/stt_ws services/py/whisper_stream_ws
# Install dependencies =========================================================
setup-shared-python:
	cd shared/py && python -m pipenv install --dev
setup-pipenv:
	python -m pip install --upgrade pip
	@echo "installing pipenv"
	python -m pip install pipenv
	setup-python-services:
	@echo "Setting up Python services..."
	@for d in $(SERVICES_PY); do \
	cd $$d && PIPENV_NOSPIN=1 python -m pipenv sync --dev && cd - >/dev/null; \
done
	
generate-requirements:
	@echo "Generating requirements.txt for Python services..."
	@for d in $(SERVICES_PY); do \
	cd $$d && python -m pipenv lock -r > requirements.txt && cd - >/dev/null; \
	done
	generate-requirements-service-%:
	cd services/py/$* && python -m pipenv lock -r > requirements.txt

	setup-python-services-quick: generate-requirements
		@for d in $(SERVICES_PY); do \
	cd $$d && python -m pip install --user -r requirements.txt && cd - >/dev/null; \
done

setup-python-quick: setup-python-services-quick
build-python:
	@echo "No build step for Python services"
clean-python:
	@echo "Cleaning Python artifacts..."
setup-python-service-%:
	@echo "Setting up Python service: $*"
	cd services/$* && PIPENV_NOSPIN=1 python -m pipenv sync --dev
setup-python: setup-pipenv setup-python-services setup-shared-python
# Run Tests=====================================================================
test-python-service-%:
	@echo "Running tests for Python service: $*"
	cd services/py/$* && PIPENV_NOSPIN=1 python -m pipenv run pytest tests/
test-python-services:
	@for d in $(SERVICES_PY); do \
	echo "Running tests in $$d...";\
	cd $$d && PIPENV_NOSPIN=1 python -m pipenv run pytest tests/ && cd - >/dev/null; \
	done

test-shared-python:
	cd shared/py && PIPENV_NOSPIN=1 python -m pipenv run pytest tests/
test-python: test-python-services test-shared-python

# Coverage=====================================================================
coverage-python-service-%:
	@echo "Running coverage for Python service: $*"
	cd services/py/$* && PIPENV_NOSPIN=1 python -m pipenv run pytest tests/ --cov=./ --cov-report=xml --cov-report=term
coverage-python-services:
	@for d in $(SERVICES_PY); do \
	echo "Generating coverage in $$d...";\
	cd $$d && PIPENV_NOSPIN=1 python -m pipenv run pytest tests/ --cov=./ --cov-report=xml --cov-report=term && cd - >/dev/null; \
	done

coverage-shared-python:
	cd shared/py && PIPENV_NOSPIN=1 python -m pipenv run pytest tests/ --cov=./ --cov-report=xml --cov-report=term
coverage-python: coverage-python-services coverage-shared-python

# Lint/formatting================================================================
lint-python-service-%:
	@echo "Linting Python service: $*"
	flake8 services/$*

lint-python:
	flake8 services/ shared/py/
format-python:
	black services/ shared/py/
